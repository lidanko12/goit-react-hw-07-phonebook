{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Conteiner/Container.module.css","components/ContactList/ContactList.module.css","components/Conteiner/Container.js","redux/phonebook/phonebookSlice.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","redux/phonebook/selector.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","pages/contacts.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","ContactLiSItem","id","isDeleting","isLoading","s","listItem","btn","type","onClick","disabled","color","height","width","ContactList","contacts","list","map","contact","getFilter","state","filter","actions","changeFilter","createAction","addContact","payload","shortid","generate","Filter","useSelector","dispatch","useDispatch","label","input","placeholder","pattern","title","value","onChange","event","target","ContactForm","data","form","onSubmit","e","preventDefault","currentTarget","newContact","find","toLowerCase","toast","warning","reset","required","transition","Zoom","autoClose","ContactsPage","isFetching","onDelete","deleting","App","path","exact","items","createReducer","includes","_","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","devtools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57f48349.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__UqA04\",\"btn\":\"ContactForm_btn__1reHq\",\"input\":\"ContactForm_input__3l-Kf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"App_label__27ONi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__HZTK-\",\"list\":\"ContactListItem_list__2MnV3\",\"btn\":\"ContactListItem_btn__2kcDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1MHjw\",\"input\":\"Filter_input__1P1Ct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3vloy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__37CDq\",\"list\":\"ContactList_list__9xQAC\",\"btn\":\"ContactList_btn__1ow7s\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.Container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nexport const contactsApi = createApi({\r\n    reducerPath: 'contactsApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: 'https://617ec7252ff7e600174bd8fe.mockapi.io/api/v1/'\r\n    }),\r\n    tagTypes :['Contact'],\r\n    endpoints: builder => ({\r\n        fetchContacts: builder.query({\r\n            query: () => '/contacts',\r\n        providesTags:['Contact'],\r\n        }),\r\n        deleteContact: builder.mutation({\r\n            query: contactId => ({\r\n                url: `/contacts/${contactId}`,\r\n                method :'DELETE',\r\n            }),\r\n            invalidatesTags :['Contact'],\r\n        }),\r\n        createContact: builder.mutation({\r\n            query: ({name,number})=> ({\r\n                url: '/contacts',\r\n                method: 'POST',\r\n                body: {\r\n                        name: name,\r\n                        number:number,\r\n                },\r\n                \r\n            }),\r\n            invalidatesTags :['Contact'],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const { useFetchContactsQuery ,useDeleteContactMutation,useCreateContactMutation } = contactsApi;","import { useDeleteContactMutation } from \"../../redux/phonebook/phonebookSlice\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactLiSItem({ id, name, number }) {\r\n    const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n    return (\r\n        <li className={s.listItem} key={id}>\r\n            {`${name}: ${number}`}\r\n            <button className={s.btn}\r\n                type=\"button\" onClick={() => deleteContact(id)} disabled={isDeleting}>\r\n                    {/* {isDeleting ? 'Deleting...' : 'Delete'} */}\r\n                {isDeleting && <Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#000000\"\r\n                                height={15}\r\n                                width={15}\r\n                            />} Delete  </button>\r\n        {/* </button> */}\r\n        </li>\r\n    );\r\n}","\r\nimport s from './ContactList.module.css'\r\nimport ContactListItem from '../ContactListItem'\r\nexport default function ContactList({contacts}) {\r\n\r\n  return (\r\n    \r\n<ul className={s.list}>\r\n      {contacts.map(contact => (\r\n      <ContactListItem key={contact.id} {...contact} /> \r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","// export const getContacts = state => state.items;\r\n// export const getFilter = state => state.filter;\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\nexport const getFilter = (state) => state.filter;\r\n\r\nexport const getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst changeFilter = createAction('phonebook/change_filter');\r\nconst deleteContact = createAction('phonebook/delete');\r\nconst addContact = createAction('phonebook/add' , (name,number)=>({\r\n    payload: {id:shortid.generate(),\r\n    name,\r\n    number,},}));\r\n\r\n\r\nconst actions = { changeFilter, deleteContact, addContact };\r\nexport default actions;","import s from \"./Filter.module.css\";\r\nimport { getFilter} from \"../../redux/phonebook/selector\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport actions from '../../redux/phonebook/phonebook-actions'\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Filter\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Enter some letters to search\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        value={filter}\r\n        onChange={event => dispatch(actions.changeFilter(event.target.value))}\r\n      ></input>\r\n    </label>\r\n  );\r\n}","\r\n// import { useState } from \"react\";\r\n// import { useDispatch,useSelector } from \"react-redux\";\r\nimport s from './ContactForm.module.css';\r\n\r\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useCreateContactMutation,useFetchContactsQuery } from \"../../redux/phonebook/phonebookSlice\";\r\n\r\n\r\nexport default function ContactForm() {\r\n    const [createContact, { isLoading }] = useCreateContactMutation();\r\n    const { data: contacts } = useFetchContactsQuery();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const name = e.currentTarget.name.value;\r\n        const number = e.currentTarget.number.value;\r\n        const newContact = {\r\n            name,\r\n            number,\r\n        };\r\n        if (contacts.find(\r\n            contact => name.toLowerCase() === contact.name.toLowerCase())) {\r\n            toast.warning('Contact is already added !!!');\r\n            e.currentTarget.reset();\r\n            return;\r\n        }\r\n        createContact(newContact);\r\n        e.currentTarget.reset();\r\n    }\r\n        return (\r\n            <>\r\n                <form className={s.form} onSubmit={handleSubmit}>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            className={s.input} />\r\n                    </label>\r\n                    <label>\r\n                        Number\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            className={s.input} />\r\n                    </label>\r\n                    <button type=\"submit\" className={s.btn} disabled={isLoading}>Add contact\r\n                        {isLoading && (\r\n                            <Loader\r\n                                type=\"Puff\"\r\n                                color=\"#000000\"\r\n                                height={25}\r\n                                width={25}\r\n                            />\r\n                        )}</button>\r\n                </form>\r\n                <ToastContainer transition={Zoom} autoClose={3000} />\r\n            </>\r\n        )\r\n    \r\n}\r\n","\r\nimport { useFetchContactsQuery,useDeleteContactMutation } from \"../redux/phonebook/phonebookSlice\";\r\nimport ContactList from \"../components/ContactList\";\r\n\r\nexport const ContactsPage = () => {\r\n    const { data, isFetching } = useFetchContactsQuery();\r\n    const [deleteContact,{isLoading:isDeleting}] = useDeleteContactMutation();\r\n    return (\r\n        <div>\r\n            {data && <ContactList contacts={data} onDelete={deleteContact} deleting ={isDeleting} />}\r\n        </div>\r\n    )\r\n};","\n\nimport Container from './components/Conteiner/Container';\nimport s from './App.module.css';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport { Route, Switch } from 'react-router';\nimport { ContactsPage } from './pages/contacts';\n\n\n// const defaultContacts= [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     { id: 'id-5', name: 'Alex Baran', number: '067-21-51' },\n//     ]\n\nexport default function App() {\n\n  // const [contacts, setContacts] = useState(JSON.parse(window.localStorage.getItem('contacts')) ?? defaultContacts);\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  // }, [contacts]);\n    \n  // const addContact = (name, number) => {\n  //   const duplicate = contacts.find((contact) => contact.name === name);\n  //   if (duplicate) {\n  //     alert('Такой контакт уже существует!');\n  //   } else {\n  //     const contact = {\n  //       name,\n  //       number,\n  //       id: shortid.generate(),\n  //     };\n\n  //     setContacts((prevState) => [contact, ...prevState]);\n  //   }\n  // };\n  // const getVisibleContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n  // const changeFilter = (e) => {\n  //   setFilter(e.currentTarget.value);\n  // };\n  // const deleteContact = (contactId) => {\n  //   setContacts((prevState) => prevState.filter((contact) => contact.id !== contactId));\n  // };\n\n  return (\n    <>\n      <Switch>\n        <Route path='/goit-react-hw-07-phonebook' exact>\n          <Container>\n            <h1 className={s.label}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.label}>Contacts</h2>\n      <Filter />\n        <ContactsPage />\n      </Container>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\n\n\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//       { id: 'id-5', name: 'Alex Baran', number: '067-21-51' },\n//     ],\n//     filter: '',\n//   };\n\n//   addContact = ({ name, number }) => {\n//     let duplicate = this.state.contacts.find(contact => contact.name === name);\n\n//     if (duplicate) {\n//       alert('Такой контакт уже существует!');\n//     } else {\n//       const contact = {\n//         name,\n//         number,\n//         id: shortid.generate(),\n//       };\n\n//       this.setState(prevState => ({\n//         contacts: [...prevState.contacts, contact],\n//       }));\n//     }\n//   };\n//   changeFilter = e => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n//   getVisibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parseContacts = JSON.parse(contacts);\n//     if (parseContacts) {\n//       this.setState({ contacts: parseContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       console.log('Обновился стейт');\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n//   // onSubmitHandler = data => {\n//   //   console.log(data)\n//   // }\n\n//   render() {\n//     const { filter } = this.state;\n//     const VisibleContacts = this.getVisibleContacts();\n//     return (\n//       <>\n//         <h1 className={s}>Phonebook</h1>\n//         <ContactForm onSubmit={this.addContact} />\n//         <h2 className={s}>Contacts</h2>\n//         <Filter value={filter} onChange={this.changeFilter} />\n//         <ContactList\n//           contacts={VisibleContacts}\n//           onDeleteContact={this.deleteContact}\n//         />\n//       </>\n//     );\n//   }\n// }\n\n// export default App;\n\n// onSubmitData={this.onSubmitHandler}\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from './phonebook-actions';\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter((contacts) => !contacts.id.includes(payload))\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n","\r\n\r\n// import {\r\n//   persistStore,\r\n//   persistReducer, \r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport { contactsApi } from './phonebook/phonebookSlice'\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\r\n// import { useReducer } from \"react\";\r\n\r\n\r\n// const persistConfig = {\r\n//     key: 'contact',\r\n//     storage,\r\n//     blacklist:['filter']\r\n// }\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//     ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]:contactsApi.reducer\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),contactsApi.middleware\r\n  ],\r\n  devtools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\nsetupListeners(store.dispatch);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './redux/store';\n// import {PersistGate} from 'redux-persist/es/integration/react'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n    <App />\n      {/* </PersistGate> */}\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}