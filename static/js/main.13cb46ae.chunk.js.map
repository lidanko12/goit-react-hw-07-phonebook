{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/Conteiner/Container.module.css","components/ContactList/ContactList.module.css","components/Conteiner/Container.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.jsx","redux/phonebook/phonebookSlice.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","actions","changeFilter","createAction","deleteContact","addContact","name","number","payload","id","shortid","generate","Filter","value","onChange","s","label","input","type","placeholder","pattern","title","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","mutation","contactId","url","method","invalidatesTags","createContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","ContactForm","isLoading","contacts","data","form","onSubmit","e","preventDefault","currentTarget","newContact","find","contact","toLowerCase","toast","warning","reset","required","btn","disabled","color","height","width","transition","Zoom","autoClose","ContactLiSItem","isDeleting","listItem","onClick","ContactList","map","App","isFetching","useState","filter","setFilter","normilizedFilter","includes","getVisibleContacts","createReducer","_","store","configureStore","reducer","middleware","getDefaultMiddleware","devtools","process","setupListeners","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13cb46ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__UqA04\",\"btn\":\"ContactForm_btn__1reHq\",\"input\":\"ContactForm_input__3l-Kf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"App_label__27ONi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1MHjw\",\"input\":\"Filter_input__1P1Ct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__HZTK-\",\"list\":\"ContactListItem_list__2MnV3\",\"btn\":\"ContactListItem_btn__2kcDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3vloy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__37CDq\",\"list\":\"ContactList_list__9xQAC\",\"btn\":\"ContactList_btn__1ow7s\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.Container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst changeFilter = createAction('phonebook/change_filter');\r\nconst deleteContact = createAction('phonebook/delete');\r\nconst addContact = createAction('phonebook/add' , (name,number)=>({\r\n    payload: {id:shortid.generate(),\r\n    name,\r\n    number,},}));\r\n\r\n\r\nconst actions = { changeFilter, deleteContact, addContact };\r\nexport default actions;","import s from \"./Filter.module.css\";\r\nimport { getFilter} from \"../../redux/phonebook/selector\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport actions from '../../redux/phonebook/phonebook-actions'\r\nexport default function Filter({value, onChange}) {\r\n\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Filter\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Enter some letters to search\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nexport const contactsApi = createApi({\r\n    reducerPath: 'contactsApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: 'https://617ec7252ff7e600174bd8fe.mockapi.io/api/v1/'\r\n    }),\r\n    tagTypes :['Contact'],\r\n    endpoints: builder => ({\r\n        fetchContacts: builder.query({\r\n            query: () => '/contacts',\r\n        providesTags:['Contact'],\r\n        }),\r\n        deleteContact: builder.mutation({\r\n            query: contactId => ({\r\n                url: `/contacts/${contactId}`,\r\n                method :'DELETE',\r\n            }),\r\n            invalidatesTags :['Contact'],\r\n        }),\r\n        createContact: builder.mutation({\r\n            query: ({name,number})=> ({\r\n                url: '/contacts',\r\n                method: 'POST',\r\n                body: {\r\n                        name: name,\r\n                        number:number,\r\n                },\r\n                \r\n            }),\r\n            invalidatesTags :['Contact'],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const { useFetchContactsQuery ,useDeleteContactMutation,useCreateContactMutation } = contactsApi;","\r\n// import { useState } from \"react\";\r\n// import { useDispatch,useSelector } from \"react-redux\";\r\nimport s from './ContactForm.module.css';\r\n\r\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useCreateContactMutation,useFetchContactsQuery } from \"../../redux/phonebook/phonebookSlice\";\r\n\r\n\r\nexport default function ContactForm() {\r\n    const [createContact, { isLoading }] = useCreateContactMutation();\r\n    const { data: contacts } = useFetchContactsQuery();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const name = e.currentTarget.name.value;\r\n        const number = e.currentTarget.number.value;\r\n        const newContact = {\r\n            name,\r\n            number,\r\n        };\r\n        if (contacts.find(\r\n            contact => name.toLowerCase() === contact.name.toLowerCase())) {\r\n            toast.warning('Contact is already added !!!');\r\n            e.currentTarget.reset();\r\n            return;\r\n        }\r\n        createContact(newContact);\r\n        e.currentTarget.reset();\r\n    }\r\n        return (\r\n            <>\r\n                <form className={s.form} onSubmit={handleSubmit}>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            className={s.input} />\r\n                    </label>\r\n                    <label>\r\n                        Number\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            className={s.input} />\r\n                    </label>\r\n                    <button type=\"submit\" className={s.btn} disabled={isLoading}>Add contact\r\n                        {isLoading && (\r\n                            <Loader\r\n                                type=\"Puff\"\r\n                                color=\"#000000\"\r\n                                height={25}\r\n                                width={25}\r\n                            />\r\n                        )}</button>\r\n                </form>\r\n                <ToastContainer transition={Zoom} autoClose={3000} />\r\n            </>\r\n        )\r\n    \r\n}\r\n","import { useDeleteContactMutation } from \"../../redux/phonebook/phonebookSlice\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactLiSItem({ id, name, number }) {\r\n    const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n    return (\r\n        <li className={s.listItem} key={id}>\r\n            {`${name}: ${number}`}\r\n            <button className={s.btn}\r\n                type=\"button\" onClick={() => deleteContact(id)} disabled={isDeleting}>\r\n                {isDeleting ?( <Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#000000\"\r\n                                height={15}\r\n                                width={15}\r\n                            />):'Delete'} </button>\r\n        </li>\r\n    );\r\n}","\r\nimport s from './ContactList.module.css'\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nexport default function ContactList({contacts}) {\r\n\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n          <ContactListItem key={contact.id} {...contact} />\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\n","\n\nimport Container from './components/Conteiner/Container';\nimport s from './App.module.css';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\n\nimport ContactList from './components/ContactList';\nimport { useState } from 'react';\nimport { useFetchContactsQuery } from './redux/phonebook/phonebookSlice';\n\n\nexport default function App() {\n  const { data, isFetching } = useFetchContactsQuery(\"\");\n\n  \n  const [filter, setFilter] = useState('');\n  \n  const changeFilter = e => {\n    setFilter(e.currentTarget.value)\n  }\n\n  const getVisibleContacts = () => {\n    const normilizedFilter = filter.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter));\n  }\n\n  return (\n    <>\n          <Container>\n            <h1 className={s.label}>Phonebook</h1>\n    {data && <ContactForm contacts = {data} />}\n      <h2 className={s.label}>Contacts</h2>\n            <Filter value={filter} onChange={changeFilter} />\n        {data &&<ContactList contacts={getVisibleContacts()} />}\n      </Container>\n    </>\n  );\n}\n\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from './phonebook-actions';\r\n\r\n\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload\r\n});\r\n\r\n\r\nexport default filter\r\n","\r\n\r\n// import {\r\n//   persistStore,\r\n//   persistReducer, \r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport { contactsApi } from './phonebook/phonebookSlice'\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\r\n// import { useReducer } from \"react\";\r\n\r\n\r\n// const persistConfig = {\r\n//     key: 'contact',\r\n//     storage,\r\n//     blacklist:['filter']\r\n// }\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//     ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]:contactsApi.reducer\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),contactsApi.middleware\r\n  ],\r\n  devtools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\nsetupListeners(store.dispatch);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}